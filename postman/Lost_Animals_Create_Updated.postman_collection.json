{
	"info": {
		"_postman_id": "lost-animals-create-updated",
		"name": "AnimoPlus - Cr√©ation Lost Animals (Mise √† jour)",
		"description": "Tests pour la cr√©ation d'annonces avec auto-remplissage des contacts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "{{base_url}}"
		}
	],
	"item": [
		{
			"name": "‚úÖ Cr√©ation avec Auto-remplissage",
			"item": [
				{
					"name": "Cr√©er annonce - Animal perdu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Contact info auto-filled from user', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    ",
									"    const post = jsonData.data;",
									"    pm.expect(post).to.have.property('contact_name');",
									"    pm.expect(post).to.have.property('contact_phone');",
									"    pm.expect(post).to.have.property('contact_email');",
									"    ",
									"    // V√©rifier que les infos de contact correspondent √† l'utilisateur",
									"    pm.expect(post.contact_name).to.eql(post.user.name);",
									"    pm.expect(post.contact_email).to.eql(post.user.email);",
									"    ",
									"    console.log('‚úÖ Contact auto-rempli:', post.contact_name, '-', post.contact_email);",
									"    ",
									"    // Sauvegarder l'ID pour les tests suivants",
									"    pm.environment.set('created_post_id', post.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"lost\",\n  \"animal_type\": \"chien\",\n  \"name\": \"Max\",\n  \"description\": \"Berger allemand de 3 ans, tr√®s gentil. Porte un collier rouge avec m√©daille. R√©pond √† son nom.\",\n  \"additional_info\": \"Craintif avec les √©trangers mais tr√®s affectueux. Aime les enfants.\",\n  \"location\": \"Avenue de la R√©publique, Lyon 3√®me\",\n  \"latitude\": 45.7640,\n  \"longitude\": 4.8357,\n  \"reward\": \"50‚Ç¨\",\n  \"authorize_diffusion\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"]
						}
					}
				},
				{
					"name": "Cr√©er annonce - Animal trouv√©",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Found animal created successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.type).to.eql('found');",
									"    pm.expect(jsonData.data.status).to.eql('pending');",
									"    console.log('‚úÖ Annonce \"trouv√©\" cr√©√©e:', jsonData.data.name);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"found\",\n  \"animal_type\": \"chat\",\n  \"name\": \"Chat tigr√©\",\n  \"description\": \"Chat tigr√© trouv√© pr√®s du parc. Semble bien nourri, probablement domestique.\",\n  \"additional_info\": \"Tr√®s sociable, se laisse caresser facilement.\",\n  \"location\": \"Parc de la T√™te d'Or, Lyon 6√®me\",\n  \"latitude\": 45.7797,\n  \"longitude\": 4.8517,\n  \"authorize_diffusion\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"]
						}
					}
				},
				{
					"name": "Cr√©er annonce - Champs minimaux",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Minimal fields work correctly', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    ",
									"    const post = jsonData.data;",
									"    pm.expect(post.reward).to.be.null;",
									"    pm.expect(post.additional_info).to.be.null;",
									"    pm.expect(post.authorize_diffusion).to.be.true; // Valeur par d√©faut",
									"    ",
									"    console.log('‚úÖ Annonce minimale cr√©√©e avec succ√®s');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"lost\",\n  \"animal_type\": \"oiseau\",\n  \"name\": \"Perroquet\",\n  \"description\": \"Perroquet vert et rouge, tr√®s bavard.\",\n  \"location\": \"Centre-ville, Lyon\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"]
						}
					}
				}
			]
		},
		{
			"name": "‚ùå Tests de Validation",
			"item": [
				{
					"name": "Erreur - Champs obligatoires manquants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Validation errors returned', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData).to.have.property('errors');",
									"    console.log('‚úÖ Erreurs de validation:', Object.keys(jsonData.errors));",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"lost\",\n  \"name\": \"Max\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"]
						}
					}
				},
				{
					"name": "Erreur - Type invalide",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Invalid type error', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData.errors).to.have.property('type');",
									"    console.log('‚úÖ Erreur type invalide d√©tect√©e');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"invalid_type\",\n  \"animal_type\": \"chien\",\n  \"name\": \"Max\",\n  \"description\": \"Description\",\n  \"location\": \"Lyon\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"]
						}
					}
				}
			]
		},
		{
			"name": "üîç V√©rification Post-Cr√©ation",
			"item": [
				{
					"name": "V√©rifier annonce cr√©√©e",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Post retrieved successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    ",
									"    const post = jsonData.data;",
									"    pm.expect(post.status).to.eql('pending');",
									"    pm.expect(post).to.have.property('contact_name');",
									"    pm.expect(post).to.have.property('contact_email');",
									"    ",
									"    console.log('‚úÖ Annonce r√©cup√©r√©e:', post.name, '- Status:', post.status);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/lost-animals/{{created_post_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals", "{{created_post_id}}"]
						}
					}
				}
			]
		}
	]
}
