{
	"info": {
		"_postman_id": "appointments-api-collection",
		"name": "Appointments API",
		"description": "Collection complète pour tester l'API des rendez-vous avec les nouveaux champs location_type, address et online_meeting_url",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.access_token) {",
									"        pm.environment.set('jwt_token', response.data.access_token);",
									"        pm.environment.set('user_id', response.data.user.id);",
									"        console.log('Token JWT sauvegardé:', response.data.access_token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "Appointments CRUD",
			"item": [
				{
					"name": "Get All Appointments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointments?per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments"
							],
							"query": [
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "status",
									"value": "pending",
									"disabled": true
								},
								{
									"key": "date",
									"value": "2025-09-25",
									"disabled": true
								}
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success true', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});",
									"",
									"pm.test('Response contains appointments data', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data).to.have.property('data');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Create Physical Appointment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_id\": \"{{service_id}}\",\n    \"animal_id\": \"{{animal_id}}\",\n    \"date\": \"2025-09-26\",\n    \"start_time\": \"09:00\",\n    \"end_time\": \"10:00\",\n    \"message\": \"Consultation de routine pour mon animal\",\n    \"location_type\": \"physical\",\n    \"address\": \"123 Rue de la Paix, 75001 Paris\",\n    \"online_meeting_url\": null\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response has success true', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});",
									"",
									"pm.test('Appointment created with correct location_type', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data.location_type).to.equal('physical');",
									"    pm.expect(response.data.address).to.not.be.null;",
									"});",
									"",
									"// Save appointment ID for other tests",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('appointment_id', response.data.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Create Online Appointment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_id\": \"{{service_id}}\",\n    \"animal_id\": \"{{animal_id}}\",\n    \"date\": \"2025-09-27\",\n    \"start_time\": \"14:00\",\n    \"end_time\": \"15:00\",\n    \"message\": \"Consultation en ligne pour suivi\",\n    \"location_type\": \"online\",\n    \"address\": null,\n    \"online_meeting_url\": \"https://meet.google.com/abc-def-ghi\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Online appointment created correctly', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data.location_type).to.equal('online');",
									"    pm.expect(response.data.online_meeting_url).to.not.be.null;",
									"    pm.expect(response.data.address).to.be.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Single Appointment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointments/{{appointment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments",
								"{{appointment_id}}"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response contains location fields', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data).to.have.property('location_type');",
									"    pm.expect(response.data).to.have.property('address');",
									"    pm.expect(response.data).to.have.property('online_meeting_url');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Update Appointment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\": \"2025-09-28\",\n    \"start_time\": \"10:00\",\n    \"end_time\": \"11:00\",\n    \"message\": \"Rendez-vous modifié\",\n    \"location_type\": \"online\",\n    \"address\": null,\n    \"online_meeting_url\": \"https://zoom.us/j/123456789\",\n    \"status\": \"confirmed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments/{{appointment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments",
								"{{appointment_id}}"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Appointment updated successfully', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.status).to.equal('confirmed');",
									"    pm.expect(response.data.location_type).to.equal('online');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Delete Appointment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointments/{{appointment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments",
								"{{appointment_id}}"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Appointment deleted successfully', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Restore Appointment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointments/{{appointment_id}}/restore",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments",
								"{{appointment_id}}",
								"restore"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Appointment restored successfully', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "Test Routes",
			"item": [
				{
					"name": "Test Basic POST",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"test\": \"data\",\n    \"message\": \"Test route functionality\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments/test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments",
								"test"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Test route works', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.message).to.equal('Test POST route works!');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Test Store Authentication",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_id\": \"{{service_id}}\",\n    \"animal_id\": \"{{animal_id}}\",\n    \"date\": \"2025-09-25\",\n    \"start_time\": \"09:00\",\n    \"end_time\": \"10:00\",\n    \"location_type\": \"physical\",\n    \"address\": \"Test address\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments/test-store",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments",
								"test-store"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Authentication test works', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.user).to.not.equal('null');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "Validation Tests",
			"item": [
				{
					"name": "Missing Required Fields",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"Test validation - missing required fields\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validation error for missing fields', function () {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Invalid Location Type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_id\": \"{{service_id}}\",\n    \"animal_id\": \"{{animal_id}}\",\n    \"date\": \"2025-09-25\",\n    \"start_time\": \"09:00\",\n    \"end_time\": \"10:00\",\n    \"location_type\": \"invalid_type\",\n    \"address\": \"Test address\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validation error for invalid location_type', function () {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Physical Appointment Without Address",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_id\": \"{{service_id}}\",\n    \"animal_id\": \"{{animal_id}}\",\n    \"date\": \"2025-09-25\",\n    \"start_time\": \"09:00\",\n    \"end_time\": \"10:00\",\n    \"location_type\": \"physical\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validation error for physical appointment without address', function () {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Online Appointment Without URL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_id\": \"{{service_id}}\",\n    \"animal_id\": \"{{animal_id}}\",\n    \"date\": \"2025-09-25\",\n    \"start_time\": \"09:00\",\n    \"end_time\": \"10:00\",\n    \"location_type\": \"online\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointments"
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validation error for online appointment without URL', function () {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "user_email",
			"value": "test@example.com",
			"type": "string"
		},
		{
			"key": "user_password",
			"value": "password123",
			"type": "string"
		},
		{
			"key": "service_id",
			"value": "01990e99-d5fb-7098-8a7b-ea41841ed60c",
			"type": "string"
		},
		{
			"key": "animal_id",
			"value": "your-animal-id-here",
			"type": "string"
		}
	]
}
