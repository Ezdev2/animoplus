{
	"info": {
		"_postman_id": "550e8400-e29b-41d4-a716-446655440000",
		"name": "TriggerStocks Collection",
		"description": "Collection for testing TriggerStock API endpoints - Stock level alerts and trigger management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000/api",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "trigger_stock_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "actif_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "fournisseur_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.access_token) {",
									"        pm.collectionVariables.set('jwt_token', response.data.access_token);",
									"        pm.test('JWT token saved', function () {",
									"            pm.expect(response.data.access_token).to.be.a('string');",
									"        });",
									"    }",
									"}",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    pm.expect(pm.response.json()).to.have.property('success');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"veterinarian@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TriggerStocks Management",
			"item": [
				{
					"name": "List All Trigger Stocks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', true);",
									"});",
									"",
									"pm.test('Response has data property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('data');",
									"});",
									"",
									"if (pm.response.json().data.data && pm.response.json().data.data.length > 0) {",
									"    const firstTrigger = pm.response.json().data.data[0];",
									"    pm.collectionVariables.set('trigger_stock_id', firstTrigger.id);",
									"    ",
									"    pm.test('First trigger has required properties', function () {",
									"        pm.expect(firstTrigger).to.have.property('id');",
									"        pm.expect(firstTrigger).to.have.property('actif_id');",
									"        pm.expect(firstTrigger).to.have.property('user_id');",
									"        pm.expect(firstTrigger).to.have.property('montant');",
									"        pm.expect(firstTrigger).to.have.property('trigger_method');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/trigger-stocks?per_page=15&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks"
							],
							"query": [
								{
									"key": "per_page",
									"value": "15"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Trigger Stocks with Filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/trigger-stocks?is_enable=true&trigger_method=email&search=stock&sort_by=created_at&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks"
							],
							"query": [
								{
									"key": "is_enable",
									"value": "true"
								},
								{
									"key": "trigger_method",
									"value": "email"
								},
								{
									"key": "search",
									"value": "stock"
								},
								{
									"key": "sort_by",
									"value": "created_at"
								},
								{
									"key": "sort_order",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Trigger Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', true);",
									"});",
									"",
									"pm.test('Response has data property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('data');",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.id) {",
									"        pm.collectionVariables.set('trigger_stock_id', response.data.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"actif_id\": \"{{actif_id}}\",\n    \"fournisseur_id\": \"{{fournisseur_id}}\",\n    \"montant\": 10.50,\n    \"ask_montant\": 50.00,\n    \"trigger_method\": \"email\",\n    \"description\": \"Alerte email pour stock faible - Test Postman\",\n    \"notification_email\": true,\n    \"notification_sms\": false,\n    \"metadata\": {\n        \"priority\": \"high\",\n        \"contact_fournisseur\": \"contact@fournisseur.com\",\n        \"notes\": \"Créé via Postman pour test\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/trigger-stocks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific Trigger Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', true);",
									"});",
									"",
									"pm.test('Response has data property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('data');",
									"});",
									"",
									"pm.test('Data has required properties', function () {",
									"    const data = pm.response.json().data;",
									"    pm.expect(data).to.have.property('id');",
									"    pm.expect(data).to.have.property('actif_id');",
									"    pm.expect(data).to.have.property('user_id');",
									"    pm.expect(data).to.have.property('montant');",
									"    pm.expect(data).to.have.property('trigger_method');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/trigger-stocks/{{trigger_stock_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks",
								"{{trigger_stock_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Trigger Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', true);",
									"});",
									"",
									"pm.test('Response has data property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('data');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"actif_id\": \"{{actif_id}}\",\n    \"fournisseur_id\": \"{{fournisseur_id}}\",\n    \"montant\": 15.75,\n    \"ask_montant\": 75.00,\n    \"trigger_method\": \"notification\",\n    \"description\": \"Alerte notification pour stock faible - Mis à jour via Postman\",\n    \"notification_email\": true,\n    \"notification_sms\": true,\n    \"metadata\": {\n        \"priority\": \"medium\",\n        \"contact_fournisseur\": \"support@fournisseur.com\",\n        \"notes\": \"Mis à jour via Postman\",\n        \"last_update_reason\": \"Changement de seuil\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/trigger-stocks/{{trigger_stock_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks",
								"{{trigger_stock_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable Trigger Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', true);",
									"});",
									"",
									"pm.test('Trigger is enabled', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data.is_enable).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/trigger-stocks/{{trigger_stock_id}}/enable",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks",
								"{{trigger_stock_id}}",
								"enable"
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable Trigger Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', true);",
									"});",
									"",
									"pm.test('Trigger is disabled', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data.is_enable).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/trigger-stocks/{{trigger_stock_id}}/disable",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks",
								"{{trigger_stock_id}}",
								"disable"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Trigger Stocks Statistics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', true);",
									"});",
									"",
									"pm.test('Response has statistics data', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data).to.have.property('total_triggers');",
									"    pm.expect(response.data).to.have.property('active_triggers');",
									"    pm.expect(response.data).to.have.property('inactive_triggers');",
									"    pm.expect(response.data).to.have.property('triggers_by_method');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/trigger-stocks/statistics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks",
								"statistics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore Deleted Trigger Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/trigger-stocks/{{trigger_stock_id}}/restore",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks",
								"{{trigger_stock_id}}",
								"restore"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Trigger Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/trigger-stocks/{{trigger_stock_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks",
								"{{trigger_stock_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Scenarios",
			"item": [
				{
					"name": "Create Trigger Stock - Validation Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Response has success property false', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', false);",
									"});",
									"",
									"pm.test('Response has errors property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('errors');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"montant\": \"invalid_number\",\n    \"trigger_method\": \"invalid_method\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/trigger-stocks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Non-existent Trigger Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 404', function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Response has success property false', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/trigger-stocks/550e8400-e29b-41d4-a716-446655440999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks",
								"550e8400-e29b-41d4-a716-446655440999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unauthorized Access",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test('Response has success property false', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success', false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/trigger-stocks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trigger-stocks"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
