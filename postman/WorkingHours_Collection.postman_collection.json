{
	"info": {
		"_postman_id": "working-hours-collection-uuid",
		"name": "WorkingHours API Collection",
		"description": "Collection complète pour tester les API des heures de travail (WorkingHour) dans AnimoPlus",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					"// Set base URL if not already set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:8000');",
					"}"
				],
				"type": "text/javascript"
			}
		}
	],
	"item": [
		{
			"name": "Get All Working Hours",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Response has success property', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test('Response has data array', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('data');",
							"    pm.expect(jsonData.data.data).to.be.an('array');",
							"});",
							"",
							"// Store first working hour ID for other tests",
							"const jsonData = pm.response.json();",
							"if (jsonData.data.data.length > 0) {",
							"    pm.environment.set('working_hour_id', jsonData.data.data[0].id);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/working-hours",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"working-hours"
					]
				}
			}
		},
		{
			"name": "Create Working Hour",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test('Response has success property', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test('Response has created working hour data', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('day_of_week');",
							"    pm.expect(jsonData.data).to.have.property('start_time');",
							"    pm.expect(jsonData.data).to.have.property('end_time');",
							"});",
							"",
							"// Store created working hour ID",
							"const jsonData = pm.response.json();",
							"pm.environment.set('created_working_hour_id', jsonData.data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"day_of_week\": 1,\n    \"start_time\": \"08:00\",\n    \"end_time\": \"17:00\",\n    \"break_start_time\": \"12:00\",\n    \"break_end_time\": \"13:00\",\n    \"is_active\": true,\n    \"is_available\": true,\n    \"notes\": \"Consultations matinales - Test Postman\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/working-hours",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"working-hours"
					]
				}
			}
		},
		{
			"name": "Get Working Hour by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Response has success property', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test('Response has working hour data', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data.id).to.equal(pm.environment.get('working_hour_id'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/working-hours/{{working_hour_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"working-hours",
						"{{working_hour_id}}"
					]
				}
			}
		},
		{
			"name": "Update Working Hour",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Response has success property', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test('Working hour was updated', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data.notes).to.include('Modifié');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"day_of_week\": 1,\n    \"start_time\": \"09:00\",\n    \"end_time\": \"18:00\",\n    \"break_start_time\": \"12:30\",\n    \"break_end_time\": \"13:30\",\n    \"is_active\": true,\n    \"is_available\": true,\n    \"notes\": \"Consultations modifiées - Test Postman\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/working-hours/{{created_working_hour_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"working-hours",
						"{{created_working_hour_id}}"
					]
				}
			}
		},
		{
			"name": "Get Weekly Schedule",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Response has success property', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test('Response has weekly schedule data', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('schedule');",
							"    pm.expect(jsonData.data.schedule).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/working-hours/weekly/schedule",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"working-hours",
						"weekly",
						"schedule"
					]
				}
			}
		},
		{
			"name": "Get Available Slots",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Response has success property', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test('Response has slots data', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('slots');",
							"    pm.expect(jsonData.data.slots).to.be.an('array');",
							"    pm.expect(jsonData.data).to.have.property('total_slots');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/working-hours/available/slots?day_of_week=1&duration=30",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"working-hours",
						"available",
						"slots"
					],
					"query": [
						{
							"key": "day_of_week",
							"value": "1"
						},
						{
							"key": "duration",
							"value": "30"
						}
					]
				}
			}
		},
		{
			"name": "Delete Working Hour",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Response has success property', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test('Success message is correct', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include('supprimées');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/working-hours/{{created_working_hour_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"working-hours",
						"{{created_working_hour_id}}"
					]
				}
			}
		},
		{
			"name": "Restore Working Hour",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Response has success property', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.true;",
							"});",
							"",
							"pm.test('Working hour was restored', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/working-hours/{{created_working_hour_id}}/restore",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"working-hours",
						"{{created_working_hour_id}}",
						"restore"
					]
				}
			}
		},
		{
			"name": "Validation Test - Invalid Day",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 422', function () {",
							"    pm.response.to.have.status(422);",
							"});",
							"",
							"pm.test('Response has validation errors', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.false;",
							"    pm.expect(jsonData).to.have.property('errors');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"day_of_week\": 8,\n    \"start_time\": \"08:00\",\n    \"end_time\": \"17:00\",\n    \"is_active\": true,\n    \"is_available\": true\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/working-hours",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"working-hours"
					]
				}
			}
		},
		{
			"name": "Validation Test - Invalid Time Format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 422', function () {",
							"    pm.response.to.have.status(422);",
							"});",
							"",
							"pm.test('Response has validation errors', function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('success');",
							"    pm.expect(jsonData.success).to.be.false;",
							"    pm.expect(jsonData).to.have.property('errors');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"day_of_week\": 1,\n    \"start_time\": \"25:00\",\n    \"end_time\": \"17:00\",\n    \"is_active\": true,\n    \"is_available\": true\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/working-hours",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"working-hours"
					]
				}
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}
