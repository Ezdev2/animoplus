{
	"info": {
		"_postman_id": "550e8400-e29b-41d4-a716-446655440000",
		"name": "AppointmentFiles Collection",
		"description": "Collection pour tester l'API des fichiers de rendez-vous (AppointmentFile)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('token');",
									"    pm.environment.set('auth_token', jsonData.data.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{test_email}}\",\n    \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Appointment Files CRUD",
			"item": [
				{
					"name": "List Appointment Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success true\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});",
									"",
									"pm.test(\"Response has data array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Response has pagination\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('pagination');",
									"    pm.expect(jsonData.pagination).to.have.property('current_page');",
									"    pm.expect(jsonData.pagination).to.have.property('total');",
									"});",
									"",
									"// Store first file ID for other tests",
									"if (pm.response.json().data.length > 0) {",
									"    pm.environment.set('test_file_id', pm.response.json().data[0].id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointment-files?per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files"
							],
							"query": [
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Appointment File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has success true\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});",
									"",
									"pm.test(\"Response has file data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data).to.have.property('file_name');",
									"    pm.expect(jsonData.data).to.have.property('appointment_id');",
									"    pm.environment.set('uploaded_file_id', jsonData.data.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "appointment_id",
									"value": "{{test_appointment_id}}",
									"type": "text"
								},
								{
									"key": "file",
									"src": "/path/to/test/file.jpg",
									"type": "file"
								},
								{
									"key": "description",
									"value": "Test file upload via Postman",
									"type": "text"
								},
								{
									"key": "is_public",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/appointment-files",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appointment File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success true\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});",
									"",
									"pm.test(\"Response has file data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data).to.have.property('file_name');",
									"    pm.expect(jsonData.data).to.have.property('appointment');",
									"    pm.expect(jsonData.data).to.have.property('uploaded_by');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointment-files/{{test_file_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files",
								"{{test_file_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Appointment File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success true\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});",
									"",
									"pm.test(\"File description updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.description).to.include('Updated');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Updated description via Postman\",\n    \"is_public\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/appointment-files/{{test_file_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files",
								"{{test_file_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Appointment File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is binary data\", function () {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/octet-stream');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointment-files/{{test_file_id}}/download",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files",
								"{{test_file_id}}",
								"download"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Appointment File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success true\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});",
									"",
									"pm.test(\"Success message in French\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include('supprim√©');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointment-files/{{uploaded_file_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files",
								"{{uploaded_file_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore Appointment File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success true\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});",
									"",
									"pm.test(\"File restored successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include('restaur√©');",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointment-files/{{uploaded_file_id}}/restore",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files",
								"{{uploaded_file_id}}",
								"restore"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Filtering & Search",
			"item": [
				{
					"name": "Filter by Appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"All files belong to specified appointment\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data.length > 0) {",
									"        jsonData.data.forEach(function(file) {",
									"            pm.expect(file.appointment_id).to.eql(pm.environment.get('test_appointment_id'));",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointment-files?appointment_id={{test_appointment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files"
							],
							"query": [
								{
									"key": "appointment_id",
									"value": "{{test_appointment_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Search results contain search term\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data.length > 0) {",
									"        var found = false;",
									"        jsonData.data.forEach(function(file) {",
									"            if (file.file_name.toLowerCase().includes('radio') || ",
									"                (file.description && file.description.toLowerCase().includes('radio'))) {",
									"                found = true;",
									"            }",
									"        });",
									"        pm.expect(found).to.be.true;",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointment-files?search=radio",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files"
							],
							"query": [
								{
									"key": "search",
									"value": "radio"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by File Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"All files are of specified type\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data.length > 0) {",
									"        jsonData.data.forEach(function(file) {",
									"            pm.expect(file.file_type).to.eql('image/jpeg');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointment-files?file_type=image/jpeg",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files"
							],
							"query": [
								{
									"key": "file_type",
									"value": "image/jpeg"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Public Files Only",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"All files are public\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data.length > 0) {",
									"        jsonData.data.forEach(function(file) {",
									"            pm.expect(file.is_public).to.be.true;",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointment-files?is_public=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files"
							],
							"query": [
								{
									"key": "is_public",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Handling",
			"item": [
				{
					"name": "Get Non-existent File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response has success false\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});",
									"",
									"pm.test(\"Error message in French\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include('non trouv√©');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/appointment-files/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Without Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "appointment_id",
									"value": "{{test_appointment_id}}",
									"type": "text"
								},
								{
									"key": "file",
									"src": "/path/to/test/file.jpg",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/appointment-files",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"appointment-files"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default environment variables if not set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:8000');",
					"}",
					"if (!pm.environment.get('test_email')) {",
					"    pm.environment.set('test_email', 'test@example.com');",
					"}",
					"if (!pm.environment.get('test_password')) {",
					"    pm.environment.set('test_password', 'password123');",
					"}",
					"if (!pm.environment.get('test_appointment_id')) {",
					"    pm.environment.set('test_appointment_id', '550e8400-e29b-41d4-a716-446655440001');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test to check response time",
					"pm.test(\"Response time is less than 5000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "test_email",
			"value": "test@example.com",
			"type": "string"
		},
		{
			"key": "test_password",
			"value": "password123",
			"type": "string"
		}
	]
}
