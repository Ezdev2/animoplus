{
	"info": {
		"_postman_id": "ambassador-access-codes-collection",
		"name": "Ambassador Access Codes Collection",
		"description": "Complete CRUD operations for Ambassador Access Codes with validation tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has access token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.access_token).to.exist;",
									"    pm.globals.set(\"access_token\", jsonData.data.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{test_email}}\",\n    \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ambassador Access Codes",
			"item": [
				{
					"name": "List Ambassador Access Codes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response structure is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"    pm.expect(jsonData.pagination).to.exist;",
									"});",
									"",
									"pm.test(\"Pagination structure is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.pagination.current_page).to.be.a('number');",
									"    pm.expect(jsonData.pagination.total).to.be.a('number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes?per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes"
							],
							"query": [
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Ambassador Access Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Ambassador access code created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.id).to.exist;",
									"    pm.expect(jsonData.data.code).to.exist;",
									"    pm.globals.set(\"test_code_id\", jsonData.data.id);",
									"    pm.globals.set(\"test_code\", jsonData.data.code);",
									"});",
									"",
									"pm.test(\"Code has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.max_uses).to.be.a('number');",
									"    pm.expect(jsonData.data.current_uses).to.be.a('number');",
									"    pm.expect(jsonData.data.reward_amount).to.be.a('number');",
									"    pm.expect(jsonData.data.is_active).to.be.a('boolean');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Code de test Postman\",\n    \"max_uses\": 25,\n    \"reward_amount\": 15.50,\n    \"reward_type\": \"credit\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ambassador Access Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Ambassador access code retrieved successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.id).to.exist;",
									"    pm.expect(jsonData.data.code).to.exist;",
									"});",
									"",
									"pm.test(\"Code includes ambassador relationship\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.ambassador).to.exist;",
									"    pm.expect(jsonData.data.ambassador.name).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes/{{test_code_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes",
								"{{test_code_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Ambassador Access Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Ambassador access code updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.description).to.include(\"mis à jour\");",
									"});",
									"",
									"pm.test(\"Updated fields are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.max_uses).to.eql(30);",
									"    pm.expect(jsonData.data.reward_amount).to.eql(\"20.00\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Code de test Postman mis à jour\",\n    \"max_uses\": 30,\n    \"reward_amount\": 20.00,\n    \"reward_type\": \"discount\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes/{{test_code_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes",
								"{{test_code_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Ambassador Access Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Code validation successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.valid).to.be.a('boolean');",
									"});",
									"",
									"pm.test(\"Validation includes code details\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.valid) {",
									"        pm.expect(jsonData.data.code).to.exist;",
									"        pm.expect(jsonData.data.reward_amount).to.exist;",
									"        pm.expect(jsonData.data.remaining_uses).to.be.a('number');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"{{test_code}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes/validate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Use Ambassador Access Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Code used successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.code).to.exist;",
									"    pm.expect(jsonData.data.reward_amount).to.exist;",
									"});",
									"",
									"pm.test(\"Usage tracking is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.remaining_uses).to.be.a('number');",
									"    pm.expect(jsonData.data.ambassador).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"{{test_code}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes/use",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes",
								"use"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Ambassador Access Codes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Search results are filtered\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Search includes relevant fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data.length > 0) {",
									"        var code = jsonData.data[0];",
									"        pm.expect(code.code || code.description).to.exist;",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes?search=ANIMO&is_active=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes"
							],
							"query": [
								{
									"key": "search",
									"value": "ANIMO"
								},
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by Reward Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Filter by reward type works\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    ",
									"    jsonData.data.forEach(function(code) {",
									"        pm.expect(code.reward_type).to.eql(\"credit\");",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes?reward_type=credit",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes"
							],
							"query": [
								{
									"key": "reward_type",
									"value": "credit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Available Codes Only",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Only available codes returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    ",
									"    jsonData.data.forEach(function(code) {",
									"        pm.expect(code.is_active).to.be.true;",
									"        pm.expect(code.current_uses).to.be.below(code.max_uses);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes?available_only=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes"
							],
							"query": [
								{
									"key": "available_only",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Ambassador Access Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Ambassador access code deleted successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.include(\"supprimé\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes/{{test_code_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes",
								"{{test_code_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore Ambassador Access Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Ambassador access code restored successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.id).to.exist;",
									"    pm.expect(jsonData.message).to.include(\"restauré\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes/{{test_code_id}}/restore",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes",
								"{{test_code_id}}",
								"restore"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation Tests",
			"item": [
				{
					"name": "Create Code - Missing Required Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Validation errors returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData.errors).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Code sans max_uses\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Code - Invalid Reward Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Invalid reward type error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData.errors.reward_type).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Code avec type invalide\",\n    \"max_uses\": 10,\n    \"reward_type\": \"invalid_type\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Use Code - Invalid Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Invalid code error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData.message).to.include(\"invalide\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"INVALID_CODE_123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes/use",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes",
								"use"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Code - Invalid Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Invalid code validation\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData.valid).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"NONEXISTENT_CODE\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes/validate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unauthorized Access",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Unauthorized error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/ambassador-codes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ambassador-codes"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "test_email",
			"value": "test@example.com",
			"type": "string"
		},
		{
			"key": "test_password",
			"value": "password123",
			"type": "string"
		}
	]
}
