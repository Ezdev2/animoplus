{
	"info": {
		"_postman_id": "lost-animals-collection-id",
		"name": "AnimoPlus - Lost Animals (Coop√©ration)",
		"description": "Collection compl√®te pour tester le module Coop√©ration - Animaux perdus/trouv√©s. MISE √Ä JOUR: Les informations de contact (nom, t√©l√©phone, email) sont maintenant auto-remplies depuis l'utilisateur connect√© lors de la cr√©ation.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üìã CRUD Operations",
			"item": [
				{
					"name": "Liste des annonces (avec filtres)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success');",
									"    pm.expect(jsonData.success).to.be.true;",
									"});",
									"",
									"pm.test('Response has data with pagination', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('current_page');",
									"    pm.expect(jsonData.data).to.have.property('per_page');",
									"    console.log('‚úÖ Found', jsonData.data.total, 'annonces');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals?type=all&per_page=10",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"],
							"query": [
								{
									"key": "type",
									"value": "all",
									"description": "Type: all, lost, found"
								},
								{
									"key": "animal_type",
									"value": "chien",
									"description": "Type d'animal: chien, chat, oiseau, lapin, autre",
									"disabled": true
								},
								{
									"key": "latitude",
									"value": "48.8566",
									"description": "Latitude pour recherche g√©ographique",
									"disabled": true
								},
								{
									"key": "longitude",
									"value": "2.3522",
									"description": "Longitude pour recherche g√©ographique",
									"disabled": true
								},
								{
									"key": "radius",
									"value": "10",
									"description": "Rayon en km (d√©faut: 5)",
									"disabled": true
								},
								{
									"key": "search",
									"value": "Max",
									"description": "Terme de recherche",
									"disabled": true
								},
								{
									"key": "status",
									"value": "approved",
									"description": "Statut: pending, approved, rejected, resolved",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					}
				},
				{
					"name": "Cr√©er une annonce (Animal perdu)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success');",
									"    pm.expect(jsonData.success).to.be.true;",
									"});",
									"",
									"pm.test('Annonce created with correct data', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data.type).to.equal('lost');",
									"    pm.expect(jsonData.data.status).to.equal('pending');",
									"    ",
									"    // V√©rifier l'auto-remplissage des contacts",
									"    pm.expect(jsonData.data).to.have.property('contact_name');",
									"    pm.expect(jsonData.data).to.have.property('contact_phone');",
									"    pm.expect(jsonData.data).to.have.property('contact_email');",
									"    pm.expect(jsonData.data.contact_email).to.eql(jsonData.data.user.email);",
									"    ",
									"    // V√©rifier les informations compl√®tes de l'utilisateur",
									"    pm.expect(jsonData.data.user).to.have.property('phone');",
									"    pm.expect(jsonData.data.user).to.have.property('address');",
									"    pm.expect(jsonData.data.user).to.have.property('clinic_name');",
									"    pm.expect(jsonData.data.user).to.have.property('clinic_address');",
									"    ",
									"    // Sauvegarder l'ID pour les autres tests",
									"    pm.environment.set('lost_animal_id', jsonData.data.id);",
									"    console.log('‚úÖ Annonce cr√©√©e avec ID:', jsonData.data.id);",
									"    console.log('‚úÖ Contact auto-rempli:', jsonData.data.contact_name, '-', jsonData.data.contact_email);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"lost\",\n  \"animal_type\": \"chien\",\n  \"name\": \"Max\",\n  \"description\": \"Berger allemand de 3 ans, tr√®s gentil. Porte un collier rouge avec m√©daille. R√©pond √† son nom.\",\n  \"additional_info\": \"Craintif avec les √©trangers mais tr√®s affectueux. Aime les enfants.\",\n  \"location\": \"Avenue de la R√©publique, Lyon 3√®me\",\n  \"latitude\": 45.7640,\n  \"longitude\": 4.8357,\n  \"reward\": \"50‚Ç¨\",\n  \"authorize_diffusion\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"]
						}
					}
				},
				{
					"name": "Cr√©er une annonce (Animal trouv√©)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Animal trouv√© created successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.type).to.equal('found');",
									"    pm.expect(jsonData.data.animal_type).to.equal('chat');",
									"    ",
									"    // V√©rifier l'auto-remplissage des contacts",
									"    pm.expect(jsonData.data).to.have.property('contact_name');",
									"    pm.expect(jsonData.data).to.have.property('contact_email');",
									"    pm.expect(jsonData.data.contact_email).to.eql(jsonData.data.user.email);",
									"    ",
									"    // V√©rifier les informations compl√®tes de l'utilisateur",
									"    pm.expect(jsonData.data.user).to.have.property('phone');",
									"    pm.expect(jsonData.data.user).to.have.property('address');",
									"    ",
									"    // Sauvegarder l'ID",
									"    pm.environment.set('found_animal_id', jsonData.data.id);",
									"    console.log('‚úÖ Animal trouv√© cr√©√© avec ID:', jsonData.data.id);",
									"    console.log('‚úÖ Contact auto-rempli:', jsonData.data.contact_name);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"found\",\n  \"animal_type\": \"chat\",\n  \"name\": \"Chat tigr√© trouv√©\",\n  \"description\": \"Chat tigr√© gris et blanc, environ 2 ans. Tr√®s sociable et en bonne sant√©. Pas de collier.\",\n  \"additional_info\": \"Trouv√© pr√®s du parc de la T√™te d'Or. Semble habitu√© aux humains.\",\n  \"location\": \"Parc de la T√™te d'Or, Lyon 6√®me\",\n  \"latitude\": 45.7797,\n  \"longitude\": 4.8578,\n  \"authorize_diffusion\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"]
						}
					}
				},
				{
					"name": "D√©tail d'une annonce",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response contains annonce details', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data).to.have.property('name');",
									"    pm.expect(jsonData.data).to.have.property('description');",
									"    pm.expect(jsonData.data).to.have.property('user');",
									"    pm.expect(jsonData.data).to.have.property('photos');",
									"    console.log('‚úÖ D√©tails r√©cup√©r√©s pour:', jsonData.data.name);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals/{{lost_animal_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals", "{{lost_animal_id}}"]
						}
					}
				},
				{
					"name": "Modifier une annonce",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Annonce modified successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.reward).to.equal('100‚Ç¨');",
									"    console.log('‚úÖ Annonce modifi√©e:', jsonData.message);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reward\": \"100‚Ç¨\",\n  \"additional_info\": \"URGENT: R√©compense augment√©e ! Max manque beaucoup √† sa famille.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals/{{lost_animal_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals", "{{lost_animal_id}}"]
						}
					}
				}
			]
		},
		{
			"name": "üîç Recherche et Filtres",
			"item": [
				{
					"name": "Recherche g√©ographique (Paris 5km)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals?latitude=48.8566&longitude=2.3522&radius=5",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"],
							"query": [
								{
									"key": "latitude",
									"value": "48.8566",
									"description": "Latitude Paris"
								},
								{
									"key": "longitude",
									"value": "2.3522",
									"description": "Longitude Paris"
								},
								{
									"key": "radius",
									"value": "5",
									"description": "Rayon 5km"
								}
							]
						}
					}
				},
				{
					"name": "Filtrer par type (animaux perdus)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals?type=lost&animal_type=chien",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"],
							"query": [
								{
									"key": "type",
									"value": "lost"
								},
								{
									"key": "animal_type",
									"value": "chien"
								}
							]
						}
					}
				},
				{
					"name": "Recherche textuelle",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals?search=Max&type=lost",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"],
							"query": [
								{
									"key": "search",
									"value": "Max"
								},
								{
									"key": "type",
									"value": "lost"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "üì∏ Gestion des Photos",
			"item": [
				{
					"name": "Ajouter des photos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Photos added successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('added_photos');",
									"    pm.expect(jsonData.data.added_photos).to.be.an('array');",
									"    ",
									"    // Sauvegarder l'ID de la premi√®re photo",
									"    if (jsonData.data.added_photos.length > 0) {",
									"        pm.environment.set('photo_id', jsonData.data.added_photos[0].id);",
									"        console.log('‚úÖ Photos ajout√©es, premi√®re photo ID:', jsonData.data.added_photos[0].id);",
									"    }",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"photos\": [\n    {\n      \"photo_url\": \"https://res.cloudinary.com/demo/image/upload/v1234567890/sample.jpg\",\n      \"photo_public_id\": \"sample\",\n      \"is_primary\": true\n    },\n    {\n      \"photo_url\": \"https://res.cloudinary.com/demo/image/upload/v1234567890/sample2.jpg\",\n      \"photo_public_id\": \"sample2\",\n      \"is_primary\": false\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals/{{lost_animal_id}}/photos",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals", "{{lost_animal_id}}", "photos"]
						}
					}
				},
				{
					"name": "D√©finir photo principale",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Photo set as primary', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.include('principale');",
									"    console.log('‚úÖ Photo d√©finie comme principale');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals/{{lost_animal_id}}/photos/{{photo_id}}/primary",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals", "{{lost_animal_id}}", "photos", "{{photo_id}}", "primary"]
						}
					}
				},
				{
					"name": "Supprimer une photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Photo deleted successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.include('supprim√©e');",
									"    console.log('‚úÖ Photo supprim√©e avec succ√®s');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals/{{lost_animal_id}}/photos/{{photo_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals", "{{lost_animal_id}}", "photos", "{{photo_id}}"]
						}
					}
				}
			]
		},
		{
			"name": "‚ö° Actions Sp√©ciales",
			"item": [
				{
					"name": "Marquer comme r√©solu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Annonce marked as resolved', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.status).to.equal('resolved');",
									"    pm.expect(jsonData.data.resolved_at).to.not.be.null;",
									"    console.log('‚úÖ Annonce r√©solue le:', jsonData.data.resolved_at);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals/{{found_animal_id}}/resolve",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals", "{{found_animal_id}}", "resolve"]
						}
					}
				}
			]
		},
		{
			"name": "üë®‚Äç‚öïÔ∏è Mod√©ration (V√©t√©rinaires)",
			"item": [
				{
					"name": "Approuver une annonce",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Annonce approved successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.status).to.equal('approved');",
									"    console.log('‚úÖ Annonce approuv√©e par v√©t√©rinaire');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{vet_access_token}}",
								"description": "Token v√©t√©rinaire requis"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals/{{lost_animal_id}}/approve",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals", "{{lost_animal_id}}", "approve"]
						}
					}
				},
				{
					"name": "Rejeter une annonce",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Annonce rejected successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    console.log('‚úÖ Annonce rejet√©e par v√©t√©rinaire');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{vet_access_token}}",
								"description": "Token v√©t√©rinaire requis"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals/{{lost_animal_id}}/reject",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals", "{{lost_animal_id}}", "reject"]
						}
					}
				}
			]
		},
		{
			"name": "‚ùå Tests d'Erreurs",
			"item": [
				{
					"name": "Validation - Champs manquants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Validation errors returned', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData).to.have.property('errors');",
									"    console.log('‚úÖ Erreurs de validation:', Object.keys(jsonData.errors));",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"lost\",\n  \"name\": \"Test\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"]
						}
					}
				},
				{
					"name": "Non authentifi√©",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test('Unauthorized error', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    console.log('‚úÖ Erreur d\\'authentification correcte');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"lost\",\n  \"animal_type\": \"chien\",\n  \"name\": \"Test\",\n  \"description\": \"Test\",\n  \"location\": \"Test\",\n  \"contact_name\": \"Test\",\n  \"contact_phone\": \"0123456789\",\n  \"contact_email\": \"test@test.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/lost-animals",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals"]
						}
					}
				},
				{
					"name": "Annonce non trouv√©e",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 404', function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Not found error', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData.message).to.include('non trouv√©e');",
									"    console.log('‚úÖ Erreur 404 correcte');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/lost-animals/00000000-0000-0000-0000-000000000000",
							"host": ["{{base_url}}"],
							"path": ["api", "lost-animals", "00000000-0000-0000-0000-000000000000"]
						}
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// V√©rifier que les variables d'environnement sont d√©finies",
					"if (!pm.environment.get('base_url')) {",
					"    console.log('‚ö†Ô∏è Variable base_url non d√©finie');",
					"}",
					"",
					"if (!pm.environment.get('access_token') && pm.request.headers.get('Authorization')) {",
					"    console.log('‚ö†Ô∏è Variable access_token non d√©finie');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}
