{
	"info": {
		"_postman_id": "revenues-collection-id",
		"name": "AnimoPlus - Revenues (Revenus)",
		"description": "Collection compl√®te pour tester le module de gestion des revenus avec CRUD, filtres, statistiques et validation.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "{{base_url}}"
		}
	],
	"item": [
		{
			"name": "üìã CRUD Operations",
			"item": [
				{
					"name": "Liste des revenus (avec filtres)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response structure is correct', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success');",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData).to.have.property('filters');",
									"});",
									"",
									"pm.test('Pagination structure is correct', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('current_page');",
									"    pm.expect(jsonData.data).to.have.property('per_page');",
									"    console.log('‚úÖ Revenus r√©cup√©r√©s:', jsonData.data.total);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues?category=consultation&per_page=10",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues"],
							"query": [
								{
									"key": "category",
									"value": "consultation",
									"description": "Cat√©gorie: consultation, service, product_sale, subscription, training, surgery, vaccination, diagnostic, other",
									"disabled": true
								},
								{
									"key": "status",
									"value": "confirmed",
									"description": "Statut: draft, confirmed, cancelled",
									"disabled": true
								},
								{
									"key": "payment_status",
									"value": "paid",
									"description": "Statut paiement: pending, paid, partial, overdue, cancelled",
									"disabled": true
								},
								{
									"key": "start_date",
									"value": "2025-01-01",
									"description": "Date de d√©but (YYYY-MM-DD)",
									"disabled": true
								},
								{
									"key": "end_date",
									"value": "2025-12-31",
									"description": "Date de fin (YYYY-MM-DD)",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					}
				},
				{
					"name": "Cr√©er un revenu (Consultation)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Revenue created successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data.category).to.equal('consultation');",
									"    pm.expect(jsonData.data.amount).to.equal('50.00');",
									"    ",
									"    // Sauvegarder l'ID pour les autres tests",
									"    pm.environment.set('revenue_id', jsonData.data.id);",
									"    console.log('‚úÖ Revenu cr√©√© avec ID:', jsonData.data.id);",
									"});",
									"",
									"pm.test('Tax calculation is correct', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.is_taxable).to.be.true;",
									"    pm.expect(parseFloat(jsonData.data.tax_amount)).to.equal(10.00); // 20% de 50‚Ç¨",
									"    console.log('‚úÖ Taxe calcul√©e:', jsonData.data.tax_amount);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Consultation v√©t√©rinaire - Chat\",\n  \"description\": \"Consultation g√©n√©rale pour chat de 3 ans\",\n  \"amount\": 50.00,\n  \"category\": \"consultation\",\n  \"revenue_date\": \"2025-10-02\",\n  \"invoice_number\": \"INV-2025-001\",\n  \"client_name\": \"Marie Dubois\",\n  \"client_email\": \"marie.dubois@email.com\",\n  \"client_phone\": \"06 12 34 56 78\",\n  \"is_taxable\": true,\n  \"tax_rate\": 20.00,\n  \"payment_method\": \"card\",\n  \"payment_status\": \"paid\",\n  \"notes\": \"Client r√©gulier, chat en bonne sant√©\",\n  \"status\": \"confirmed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/revenues",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues"]
						}
					}
				},
				{
					"name": "Cr√©er un revenu (Chirurgie)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Surgery revenue created successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.category).to.equal('surgery');",
									"    pm.expect(jsonData.data.amount).to.equal('300.00');",
									"    pm.expect(jsonData.data.payment_status).to.equal('pending');",
									"    ",
									"    pm.environment.set('surgery_revenue_id', jsonData.data.id);",
									"    console.log('‚úÖ Revenu chirurgie cr√©√©:', jsonData.data.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Chirurgie - St√©rilisation chienne\",\n  \"description\": \"Ovariectomie chienne de 2 ans\",\n  \"amount\": 300.00,\n  \"category\": \"surgery\",\n  \"revenue_date\": \"2025-10-02\",\n  \"invoice_number\": \"INV-2025-002\",\n  \"client_name\": \"Pierre Martin\",\n  \"client_email\": \"pierre.martin@email.com\",\n  \"client_phone\": \"07 98 76 54 32\",\n  \"is_taxable\": true,\n  \"tax_rate\": 20.00,\n  \"payment_method\": \"transfer\",\n  \"payment_status\": \"pending\",\n  \"notes\": \"Intervention programm√©e, pr√©-anesth√©sie OK\",\n  \"status\": \"confirmed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/revenues",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues"]
						}
					}
				},
				{
					"name": "D√©tail d'un revenu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Revenue details retrieved', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data).to.have.property('title');",
									"    pm.expect(jsonData.data).to.have.property('amount');",
									"    pm.expect(jsonData.data).to.have.property('user');",
									"    console.log('‚úÖ D√©tails du revenu:', jsonData.data.title);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues/{{revenue_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues", "{{revenue_id}}"]
						}
					}
				},
				{
					"name": "Modifier un revenu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Revenue updated successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.amount).to.equal('60.00');",
									"    pm.expect(jsonData.data.payment_status).to.equal('paid');",
									"    console.log('‚úÖ Revenu modifi√© - nouveau montant:', jsonData.data.amount);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Consultation v√©t√©rinaire - Chat (Modifi√©e)\",\n  \"description\": \"Consultation g√©n√©rale + vaccination\",\n  \"amount\": 60.00,\n  \"category\": \"consultation\",\n  \"revenue_date\": \"2025-10-02\",\n  \"invoice_number\": \"INV-2025-001-MOD\",\n  \"client_name\": \"Marie Dubois\",\n  \"client_email\": \"marie.dubois@email.com\",\n  \"client_phone\": \"06 12 34 56 78\",\n  \"is_taxable\": true,\n  \"tax_rate\": 20.00,\n  \"payment_method\": \"card\",\n  \"payment_status\": \"paid\",\n  \"notes\": \"Consultation + vaccination antirabique\",\n  \"status\": \"confirmed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/revenues/{{revenue_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues", "{{revenue_id}}"]
						}
					}
				},
				{
					"name": "Supprimer un revenu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Revenue deleted successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.include('supprim√©');",
									"    console.log('‚úÖ Revenu supprim√© avec succ√®s');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues/{{surgery_revenue_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues", "{{surgery_revenue_id}}"]
						}
					}
				},
				{
					"name": "Restaurer un revenu supprim√©",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Revenue restored successfully', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.include('restaur√©');",
									"    console.log('‚úÖ Revenu restaur√© avec succ√®s');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues/{{surgery_revenue_id}}/restore",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues", "{{surgery_revenue_id}}", "restore"]
						}
					}
				}
			]
		},
		{
			"name": "üìä Statistiques et Rapports",
			"item": [
				{
					"name": "Mes revenus avec statistiques",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('My revenues with statistics', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData).to.have.property('statistics');",
									"    pm.expect(jsonData.statistics).to.have.property('total_amount');",
									"    pm.expect(jsonData.statistics).to.have.property('paid_amount');",
									"    pm.expect(jsonData.statistics).to.have.property('count_by_category');",
									"    console.log('‚úÖ Total revenus:', jsonData.statistics.total_amount);",
									"    console.log('‚úÖ Montant pay√©:', jsonData.statistics.paid_amount);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues/my-revenues?year=2025&per_page=20",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues", "my-revenues"],
							"query": [
								{
									"key": "year",
									"value": "2025"
								},
								{
									"key": "month",
									"value": "10",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "20"
								}
							]
						}
					}
				},
				{
					"name": "Statistiques d√©taill√©es (Mois)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Monthly statistics retrieved', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('period');",
									"    pm.expect(jsonData.data.period).to.equal('month');",
									"    pm.expect(jsonData.data).to.have.property('total_revenues');",
									"    pm.expect(jsonData.data).to.have.property('by_category');",
									"    pm.expect(jsonData.data).to.have.property('monthly_trend');",
									"    console.log('‚úÖ Revenus du mois:', jsonData.data.total_revenues);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues/statistics?period=month",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues", "statistics"],
							"query": [
								{
									"key": "period",
									"value": "month",
									"description": "P√©riode: month, quarter, year"
								}
							]
						}
					}
				},
				{
					"name": "Statistiques annuelles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Yearly statistics retrieved', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.period).to.equal('year');",
									"    pm.expect(jsonData.data).to.have.property('net_revenues');",
									"    pm.expect(jsonData.data).to.have.property('average_revenue');",
									"    console.log('‚úÖ Revenus nets annuels:', jsonData.data.net_revenues);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues/statistics?period=year",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues", "statistics"],
							"query": [
								{
									"key": "period",
									"value": "year"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "üîç Filtres Avanc√©s",
			"item": [
				{
					"name": "Revenus par cat√©gorie (Consultation)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('All revenues are consultations', function () {",
									"    const jsonData = pm.response.json();",
									"    if (jsonData.data.data.length > 0) {",
									"        jsonData.data.data.forEach(revenue => {",
									"            pm.expect(revenue.category).to.equal('consultation');",
									"        });",
									"        console.log('‚úÖ Consultations trouv√©es:', jsonData.data.total);",
									"    }",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues?category=consultation&per_page=10",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues"],
							"query": [
								{
									"key": "category",
									"value": "consultation"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					}
				},
				{
					"name": "Revenus pay√©s",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('All revenues are paid', function () {",
									"    const jsonData = pm.response.json();",
									"    if (jsonData.data.data.length > 0) {",
									"        jsonData.data.data.forEach(revenue => {",
									"            pm.expect(revenue.payment_status).to.equal('paid');",
									"        });",
									"        console.log('‚úÖ Revenus pay√©s:', jsonData.data.total);",
									"    }",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues?payment_status=paid&per_page=10",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues"],
							"query": [
								{
									"key": "payment_status",
									"value": "paid"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					}
				},
				{
					"name": "Revenus par p√©riode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Date range filter applied', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.filters.start_date).to.equal('2025-10-01');",
									"    pm.expect(jsonData.filters.end_date).to.equal('2025-10-31');",
									"    console.log('‚úÖ Revenus d\\'octobre 2025:', jsonData.data.total);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues?start_date=2025-10-01&end_date=2025-10-31&per_page=15",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues"],
							"query": [
								{
									"key": "start_date",
									"value": "2025-10-01"
								},
								{
									"key": "end_date",
									"value": "2025-10-31"
								},
								{
									"key": "per_page",
									"value": "15"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "‚ùå Tests de Validation",
			"item": [
				{
					"name": "Cr√©er revenu - Donn√©es invalides (422)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Validation errors returned', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData).to.have.property('errors');",
									"    pm.expect(jsonData.errors).to.have.property('amount');",
									"    pm.expect(jsonData.errors).to.have.property('category');",
									"    console.log('‚úÖ Erreurs de validation d√©tect√©es');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"\",\n  \"amount\": -50,\n  \"category\": \"invalid_category\",\n  \"revenue_date\": \"2030-01-01\",\n  \"payment_method\": \"invalid_method\",\n  \"payment_status\": \"invalid_status\",\n  \"status\": \"invalid_status\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/revenues",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues"]
						}
					}
				},
				{
					"name": "Acc√©der √† un revenu inexistant (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 404', function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Not found error returned', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData.message).to.include('non trouv√©');",
									"    console.log('‚úÖ Erreur 404 correctement g√©r√©e');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues/non-existent-id",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues", "non-existent-id"]
						}
					}
				}
			]
		},
		{
			"name": "üîí Tests de S√©curit√©",
			"item": [
				{
					"name": "Sans authentification (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test('Unauthorized access blocked', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    console.log('‚úÖ Acc√®s non autoris√© correctement bloqu√©');",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/revenues",
							"host": ["{{base_url}}"],
							"path": ["api", "revenues"]
						}
					}
				}
			]
		}
	]
}
